[branch]
  autosetupmerge = true
[push]
  default = current
[core]
  excludesfile = "~/.gitexcludes"
[diff]
  tool = opendiff
[user]
  name = Joe Yates
  email = joe.g.yates@gmail.com
  signingkey = BE8BCCD1
# For color.* settings see 'Variables' in git help config
[color]
  ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  commit = blue
  meta = yellow
  frag = magenta
  old = red
  new = green
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[alias]
  #########################
  # files
  ls                  = ls-files

  #########################
  # updating
  co                  = checkout
  p                   = pull
  ps                  = push

  #########################
  # branches
  b                   = branch
  # create a local branch that tracks a remote branch
  bt                  = !sh -c 'git checkout --track -b $0 origin/$0 && git pull'
  bc                  = checkout -b
  branches-containing = branch --contains
  # Merged remote branches
  branches-merged     = branch --no-color -r --merged
  # Unmerged remote branches
  branches-unmerged   = branch --no-color -r --no-merged

  #########################
  # branch difference
  # when was branch 1 created from branch 2?
  branch-point         = merge-base
  # list commits exclusive to each branch
  branch-commits       = !sh -c 'git rev-list --left-right $0...$1'

  #########################
  # reviewing
  review-modified      = !sh -c 'git diff --name-status $(git merge-base HEAD master) HEAD'
  review-modifications = !sh -c 'git diff $(git merge-base HEAD master) HEAD'
  review-diff          = !sh -c 'git difftool -y $(git merge-base HEAD master):$0 HEAD:$0'

  #########################
  # blame
  # $ git blame-line <FILE> <LINE>
  blame-line          = !sh -c 'git blame -L $1,$1 $0'

  #########################
  # staging
  a                   = add --interactive
  cm                  = commit
  cmm                 = commit -m
  ca                  = commit --amend
  commit-all          = commit . -m

  #########################
  # status
  s                   = status
  d                   = diff
  dc                  = diff --color-words
  # ds means status-like diff
  ds                  = diff --name-status
  # di means 'diff index'
  di                  = diff --cached

  #########################
  # searching
  tag-with-commit     = name-rev --name-only

  #########################
  # history
  l                   = log
  history             = log --oneline --decorate
  history-graph       = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
  # This doesn't work, needs a param??
  last                = log -1 HEAD

  #########################
  # merging
  m                   = merge
  mm                  = merge master

  #########################
  # the stash
  # $ git stash-diff <INDEX>
  stash-diff          = !sh -c 'git stash show stash@{$0} --patience'

[github]
  user = joeyates

# vim: :set filetype=gitconfig :

