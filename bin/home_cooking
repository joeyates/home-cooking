#!/usr/bin/env ruby

def resolve_script_path
  script_path = File.expand_path( __FILE__ )
  stat        = File.lstat( script_path )
  if stat.symlink?
    script_path = File.readlink( script_path )
  end
  script_path
end

SCRIPT_PATH  = resolve_script_path
PROJECT_ROOT = File.expand_path( '..',  File.dirname( SCRIPT_PATH ) )

$LOAD_PATH.unshift( File.expand_path( 'lib', PROJECT_ROOT ) )

require 'home_cooking'
include HomeCooking

HOME_DIRECTORY     = File.expand_path( '~' )
COOKBOOK_DIRECTORY = File.join( PROJECT_ROOT, 'cookbooks', 'user'  )
TEMPLATE_DIRECTORY = File.join( COOKBOOK_DIRECTORY, 'templates', 'default' )

def each_template
  Dir.chdir( TEMPLATE_DIRECTORY )
  Dir.glob( '**/*.erb', File::FNM_DOTMATCH ) do | template |
    file_name      = template.gsub( %r(.erb$), '' )
    template_path  = File.join( TEMPLATE_DIRECTORY, template )
    installed_path = "#{ HOME_DIRECTORY }/#{ file_name }"
    yield template_path, installed_path
  end
end

def diff_files( template, installed )
  $stdout.write `diff -U 2 -I '^# HOME-COOKING-SHA1 ' #{ template } #{ installed }`
end

def check
  each_template do | template_path, installed_path |
    file = HomeCooking::File.new( installed_path )
    if ! file.stamped?
      puts "'#{ installed_path }' is not stamped"
    elsif file.modified?
      puts "'#{ installed_path }' modified:"
      diff_files template_path, installed_path
    end
  end
end

def diff
  each_template do | template_path, installed_path |
    diff_files template_path, installed_path
  end
end

def stamp(all = false)
  each_template do | template_path, installed_path |
    file = HomeCooking::File.new( installed_path )
    if all || ! file.stamped?
      file.stamp!
    end
  end
end

case ARGV[ 0 ]
when 'check'
  check
when 'diff'
  diff
when 'stamp'
  all = ARGV.size > 1 && ARGV[ 1 ] == '--all'
  stamp all
else
  puts <<EOT
  Usage:
    $ #{ $0 } check          diff modified files with templates
    $ #{ $0 } diff           diff all files with templates
    $ #{ $0 } stamp          stamp files without hash stamps
    $ #{ $0 } stamp --all    (re)stamp all files

EOT
end
